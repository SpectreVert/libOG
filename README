libOG is a minimalist C++ network library designed in layers ranging 
from «just enough boiler-plate» to «fully-fledged framework.»

disclaimer
----------
The library is currently in active development. Interfaces and
code are not stable and can change drastically.

strictly efficient and simple
-----------------------------
libOG was first designed as a weigthless object-oriented layer over the Berkley
sockets API and network event polling (epoll, kqueue). It now aims at providing
an additional layer for out-of-the-box asynchronous networking.

+-----------+--------+-----------+-------------+-----------+
| Scheduler | Driver | TcpStream | TcpListener | UdpSocket | og::async²
+-----------+--------+-----------+-------------+-----------+
|        Poll        | TcpStream | TcpListener | UdpSocket | og::net¹
+--------------------+-----------+-------------+-----------+

1. Bare-bones library wrapping the network system calls, platform specific
event facility and non-blocking TCP/UDP sockets.

2. Asynchronous interface comprising a reactor-like event driver coupled with a
task scheduler. TCP/UDP socket bindings use futures as a bridge between the reactor
and the end-user.

todo
----
Add 'goals' and 'non-feature' sections

compilation
-----------
Requirements: a c++11 compliant compiler

The library uses tup (http://gittup.org/tup) as a build system. Even though
make is immensely more widespread, I feel like tup is more in tune with the
minimalistic Unix philosophy. You can read the details from the website.

Tuprules.tup contains build macros that you can tune for your needs.

documentation
-------------
There will be extensive documentation generated from the source files and
comments released on 1.0

As of now, the code is mainly self-explainable so don't refrain from diving
right in.

license
-------
libOG is an open source, libre project licensed under the MIT license.
