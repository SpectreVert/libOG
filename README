libOG is a minimalist C++ network library providing just enough boiler-plate
to use and monitor event-based, non-blocking TCP/UDP sockets.

disclaimer
----------
The library is currently in active development. Interfaces and
code are not stable and can change drastically.

strictly conventional and simple
--------------------------------
libOG is designed as a weightless object-oriented layer over the Unix socket
functions. It can be used for writing simple servers and client or as a base
for higher-level asynchronous code.

As such, are avoided most c++ features presenting potential overhead in
compilation time, code size or readability. Errors are communicated through
return codes and error handling is left to the user.

features
--------
The typical TCP and UDP classes will be provided by libOG, as well
as some base classes for extensibility reasons:
	
	<> Socket       implemented, base class for socket objects
	<> TcpStream    implemented, TCP client socket
	<> TcpListener  implemented, TCP listener socket
	<> UdpSocket    not implemented, basic UDP socket

+-------------------------------------+
|              ISource                | interface for monitorable source
+-------------------------------------+
|               Socket                | base class for sockets
+-----------+-------------+-----------+
| TcpStream | TcpListener | UdpSocket | specialised classes
+-----------+-------------+-----------+

libOG also has classes aimed at monitoring events:

	<> Poll         implemented (linux), used to monitor event sources
	<> Event        implemented, used to manipulate/examine events

+----------------------------------+
|                IPoll             | interface for monitor of event sources
+----------------+-----------------+
|  Poll (epoll)  |  Poll (kqueue)  | specialised implementations
+----------------+-----------------+

non-features
------------
libOG is not:
 * a general event notification library (libev)
 * an asynchronous sockets framework (libuv)
 * a threading library (libpthread)
 * a $h!tfest of template metaprogramming and dependencies (Boost.Asio)

compilation
-----------
Requirements: a c++20 compliant compiler

As of now libOG requires one c++20 feature (std::optional). Soon this will
be rewritten to make use of smart pointers and to be able to drop back again
to c++11 standard.

documentation
-------------
There will be extensive documentation generated from the source files and
comments released on 1.0

As of now, the code is mainly self-explainable. Feel free to dive in. 

license
-------
libOG is an open source, libre project licensed under the MIT license.
