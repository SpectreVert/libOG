libOG++ - minimalist non-blocking network I/O & events
====================================================
libOG++ is a low-level C++ network library providing just enough boiler-plate
to use and monitor event-based, non-blocking TCP/UDP sockets.

disclaimer
----------
The library is currently in active development. Interfaces and
code are not stable and can change drastically.

strictly conventional and simple
--------------------------------
libOG++ is designed as a weigthless object-oriented layer over the Unix socket
functions. It can be used for writing simple servers and client or as a base
for higher-level asynchronous libraries.

As such, are avoided most c++ features that present potential overhead in
compilation time, code and binary size or readability. Error handling is
done sparingly and with error codes rather than exceptions.

non-features
------------
libOG++ is not:
 * a general event notification library (libev)
 * an asynchronous sockets framework (libuv)
 * a threading library (libpthread)
 * a $h!tfest of template metaprogramming and dependencies (Boost.Asio)

goals
-----
The typical TCP and UDP socket classes will be provided by libOG, as well
as some template and base classes for extensibility reasons:
 * Socket      implemented, base class for socket objects
 * TcpStream   implemented, TCP client socket
 * TcpListener implemented, TCP listening socket
 * UdpSocket   not implemented, basic UDP socket

The library also exposes a class usable to monitor writable and readable
events on a Socket-derived ojects:
 * Poll        implemented only for epoll based kernels, i.e Linux
               BSD and Darwin implementations scheduled for 1.0
 * Event       implemented only for epoll based kernels
               BSD and Darwin implementations scheduled for 1.0
 * IPoll       interface to be used for writing OS-specific Poll implementations

compilation
-----------
Requirements: a c++11 compliant compiler

The library uses tup (http://gittup.org/tup) as a build system. Even though
make is immensely more widespread, I feel like tup is more in tune with the
minimalistic Unix philosophy. You can read the details from the website.

Tuprules.tup contains build macros that you can tune for your needs.

documentation
-------------
There will be extensive documentation generated from the source files and
comments released on 1.0

As of now, the code is mainly self-explainable so don't refrain from diving
right in.

license
-------
libOG is an open source, libre project licensed under the MIT license.
